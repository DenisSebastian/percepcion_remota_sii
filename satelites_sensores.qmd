---
subtitle: "Tipos y Características"
author: "Centro de Inteligencia Territorial"
date: "04-18-2023"
editor_options: 
  chunk_output_type: console
---

# S2: Satélites y Sensores

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 999, stringsAsFactors=F, encoding = "UTF-8")
options("rgdal_show_exportToProj4_warnings"="none") 
```

![](imagenes/S2_diagrama.png){fig-align="center" width="800"}

------------------------------------------------------------------------

![](imagenes/teorica.png){fig-align="center" width="200"}

## Satélites

### Definición de Satélite

Un satélite es una plataforma que describe una trayectoria definida alrededor de la Tierra denominada órbita. Existen dos tipos de satélites: geoestacionarios y heliosíncronos.

![](imagenes/Sentinel-2Poster.jpg){fig-align="center"}

### Clasificación de Satélites por tipo de órbita

**Geoestacionarios**:

:   Sobre la línea ecuatorial, a 36.000 km de la Tierra, realiza una vuelta alrededor de nuestro planeta al mismo tiempo que efectúa una rotación completa alrededor de su propio eje. Comunicaciones y meteorología.

![](imagenes/geoestacionario.gif){fig-align="center" width="500"}

**Heliosíncronos**:

:   Órbitas circulares y polares relativo a la tierra a 160-2000 km. Captan imágenes con regularidad sobre un mismo punto o escena.

![](imagenes/polar.gif){fig-align="center" width="400"}

## Sensores

### Definción de Sensor

Un sensor es un instrumento a bordo de una plataforma capaz de adquirir remotamente información de diferentes regiones del espectro. Cada una de estas regiones se denomina canal o banda espectral. Existen dos tipos de sensores: activos y pasivos.

### Clasificación de Sensores

**Sensores Activos**:

:   Generan su propia radiación y la reciben reflejada (Radar y LiDAR)

**Sensores Pasivos**:

:   Miden energía radiante reflejada o emitida por el sistema tierra- atmósfera. Ejemplo Landsat, Sentinel, MODIS.

### Características de los Sesores

La energía emitida o reflejada por la superficie terrestre es un fenómeno continuo en 4 cuatro dimensiones: espacio, tiempo, longitud de onda y radiancia.

**Resolución espacial**:

:   Tamaño del pixel o celda del raster que contiene a la banda espectral (Landsat: 30 m x 30 m)

**Resolución temporal**:

:   Tiempo entre imágenes sucesivas (Landsat 16 días)

*Resolución espectral*:

:   Número y rango de las regiones del espectro electromagnético para los que capta información el sensor .

**Resolución radiométrica**:

:   Indica el número de intervalos de intensidad que puede captar el sensor (escala de grises) (Landsat 5 y 7: 256)

### Resolución Espacial

Resolución espacial: Tamaño del pixel o celda del raster que contiene a la banda espectral (Landsat: 30 m x 30 m)

![](imagenes/resolucion-baja-media-alta.jpg){fig-align="center"  width="600"}

### Resolución Temporal:

El tiempo que tarda un satélite en completar un ciclo orbital; también conocido como "tiempo de revisita".


![](imagenes/revisita.png){fig-align="center"  width="300"}

Depende de las capacidades, solapa de barrido y latitud del satélite/sensor. Algunos satélites pueden apuntar sus sensores y algunos además tienen una mayor solapa en latitudes superiores así que posiblemente tengan un mayor tiempo de repetición .

### Resolución Espectral:

Número y rango de las regiones del espectro electromagnético para los que capta información el sensor.

![](imagenes/r_espectral.png){fig-align="center"  width="600"}



Describe la habilidad del sensor de definir intervalos de longitudes de onda. Cuanto más fina la resolución espectral, más estrecha la gama de longitudes de onda para un canal o banda en particular. Tener más y más finos canales permite la percepción remota de diferentes partes de la superficie de la Tierra.

### Resolución Radiométrica:

Indica el número de intervalos de intensidad que puede captar el sensor. El número máximo de niveles de luminosidad disponible depende del número de bits que se utilizan en la representación de la energía registrada.

![](imagenes/r_radiometrica.png){fig-align="center"  width="600"}

Cuanto mayor este número, más alta la resolución radiométrica y más nítidas las imágenes, representada por números digitales positivos que varían del 0 a (uno menos que) alguna potencia de 2.

```{r echo=FALSE}
suppressPackageStartupMessages(library(kableExtra))
tbl_r_rad <- data.frame(
  stringsAsFactors = FALSE,
           Nro.Bits = c("12 Bits", "10 Bits", "8 Bits", "6 Bits"),
  
            Sensor = c("MODIS","AVHRR",
                       "Landsat TM (Thematic Mapper)",
                       "Landsat MSS (Multispectral Scanner System)"),
         Potencias = c("2^12", "2^10", "2^8", "2^6"),
           Niveles = c("4096 niveles","1024 niveles",
                       "256 niveles","64 niveles")
)


tbl_r_rad %>% 
  kbl() %>%
   kable_styling(bootstrap_options = c("striped", "hover", "condensed"), font_size = 16)
```

## Correcciones en Imágenes Satelitales

Las imágenes satelitales se encuentran expuestas a una serie de interferencias que pueden llegar a perturbar la información espacial, principalmente asociadas a una serie de errores mecánicos de los sensores o a interferencias atmosféricas.

-   **Corrección radiométrica**: Corrige fallos en los sensores.
-   **Corrección geométrica**: Alteraciones en los movimientos de los satélites generan distorsiones en la imagen.
-   **Corrección topográfica**: El efecto topográfico provoca una variación de la respuesta radiométrica de la superficie inclinada frente a la de una horizontal (efecto sombra)
-   **Corrección atmosférica**: Corrige las interferencias atmosféricas (vapor de agua)

![](imagenes/correcciones.png){fig-align="center"  width="500"}

Algunos productos satelitales son diponibilizados con una o varias correcciones y dependendiendo los tipos de correcciones se dividen en niveles.

![](imagenes/niv_proc.png){fig-align="center"  width="800"}

## Satélites más Utilizados

### Landsat 8

![](imagenes/landsat8.png){fig-align="center"  width="400"}

[Landsat 8](https://es.wikipedia.org/wiki/Landsat_8) es un satélite de observación terrestre estadounidense lanzado el 11 de febrero de 2013. operado en la colaboración de la NASA con el USGS. El estudio de los datos se realiza mediante dos sensores principales. El satélite opera en luz visible, infrarrojo cercano, infrarrojo de onda corta e infrarrojo térmico (de onda larga). Las bandas de Landsat 8 están configuradas en 11 diferentes en base a la longitud de onda de su visión.

![](imagenes/L8_L7bands.jpg){fig-align="center"  width="800"}


Uno de los sensores del Landsat 8, Operational Land Imager (OLI), usa 9 bandas en el espectro de la luz visible y el infrarrojo cercano. Otro de los sensores del Landsat 8, Thermal InfraRed Sensor (TIRS), opera en el rango de infrarrojos de onda larga (Longwave InfraRed Light). El satélite proporciona imágenes con una resolución moderada que varía en diferentes bandas desde 15 m por píxel en la más precisa hasta 100 m en el infrarrojo de onda larga, donde la precisión no es vital.

```{r echo=FALSE}
tbl_l8 <- data.frame(
         stringsAsFactors = FALSE,
              check.names = FALSE,
                    Banda = c(1L, 2L, 3L, 4L, 5L, 6L, 10L, 11L, 7L, 8L, 9L),
                   Nombre = c("Costera - Aerosoles","Azul","Verde","Rojo",
                              "Infrarrojo cercano (NIR)","Infrarrojo de onda corta 1 (SWIR 1)",
                              "(TIR 1)","(TIR 2)",
                              "Infrarrojo de onda corta 2 (SWIR 2)","Pancromática","Cirrus"),
  `Longitud_de_onda_(μm)` = c("0.435 - 0.451",
                              "0.452 - 0.512","0.533 - 0.590","0.636 - 0.673",
                              "0.851 - 0.879","1.566 - 1.651","10.60 - 11.19",
                              "11.50 - 12.51","2.107 - 2.294",
                              "0.503 - 0.676","1.363 - 1.384"),
         `Resolución(m)` = c(30L,30L,30L,
                              30L,30L,30L,100L,100L,30L,15L,30L)
)

tbl_l8 %>% 
  kbl() %>%
   kable_styling(bootstrap_options = c("striped", "hover", "condensed"), font_size = 16)
```




### [Sentinel 2](https://www.esa.int/Space_in_Member_States/Spain/SENTINEL_2)

![](imagenes/sentinel-2.jpeg){fig-align="center"  width="300"}

[Sentinel-2](https://es.wikipedia.org/wiki/Sentinel-2) es una misión de observación terrestre desarrollada por la ESA dentro del programa Copérnico. Está compuesto por dos satélites idénticos: Sentinel-2A (junio de 2015) y Sentinel-2B (marzo de 2017)

**Características:**

-   Imagen multiespectral datos con 13 bandas
-   Sentinel-2 realiza las labores cada 5 días, pero con diferentes ángulos de visión.
-   La resolución espacial de 10 m, 20 m y 60 m
-   Política de datos libre y en abierto

```{r echo=FALSE}
tbl_s2 <- data.frame(
  stringsAsFactors = FALSE,
  Banda = c(
    "B1",
    "B2",
    "B3",
    "B4",
    "B5",
    "B6",
    "B7",
    "B8",
    "B8a",
    "B9",
    "B10",
    "B11",
    "B12"
  ),
  Nombre = c(
    "Ultra Blue (Coastal and Aerosol)",
    "Blue",
    "Green",
    "Red",
    "Visible and Near Infrared (VNIR)",
    "Visible and Near Infrared (VNIR)",
    "Visible and Near Infrared (VNIR)",
    "Visible and Near Infrared (VNIR)",
    "Visible and Near Infrared (VNIR)",
    "Short Wave Infrared (SWIR)",
    "Short Wave Infrared (SWIR)",
    "Short Wave Infrared (SWIR)",
    "Short Wave Infrared (SWIR)"
  ),
  Central.Wavelength = c(
    "443 nm",
    "490 nm",
    "560 nm",
    "665 nm",
    "705 nm",
    "740 nm",
    "783 nm",
    "842 nm",
    "865 nm",
    "940 nm",
    "1375 nm",
    "1610 nm",
    "2190 nm"
  ),
  `Resolución(m)` = c(
    "60 m",
    "10 m",
    "10 m",
    "10 m",
    "20 m",
    "20 m",
    "20 m",
    "10 m",
    "20 m",
    "60 m",
    "60 m",
    "20 m",
    "20 m"
  )
)

tbl_s2 %>% 
  kbl() %>%
   kable_styling(bootstrap_options = c("striped", "hover", "condensed"), font_size = 16)
```


Mas referencias [aquí](http://www.gisandbeers.com/lo-deberias-saber-imagenes-sentinel-2/)

------------------------------------------------------------------------

Finalmente se presenta una comparación la resolución espectral Landsat 8 y Sentinel-2:

![](imagenes/Comparison-of-Landsat-7-Landsat-8-and-Landsat-9-bands-with-Sentinel-2-ASTER-and-MODIS.png){fig-align="center"  width="800"}


------------------------------------------------------------------------

![](imagenes/practica.png){fig-align="center" width="200"}

## Tratamiento de Imágenes Satelitales

A continuación se hara una serie de operaciones sobre una imagen satelital LANDSAT 8 recortada por un área de estudio correspondiente a la comuna de Las Condes.

### Lectura de Imagen Satelital

```{r}
library(raster)
LC <- brick("data/raster/OLI_LC.tif")
names(LC) <- c("aerosol","blue", "green", "red", "nir", "swir1", "swir2", "tir1" )
LC
```

### Visualización Básica Imagen Satelital

<center>![](imagenes/RGBSTack_1.jpg){width=100%}</center>


```{r}
# Color Natural
plotRGB(LC, r = 4, g = 3, b = 2, stretch = "lin")
```



```{r}
library(mapview)
viewRGB(LC,   r = 4, g = 3, b = 2)
```


### Reproyección de Imagen Satelital


Definir Sistemas de Referencias como variables

```{r}
### latlon Utilizado a escala mundial
crs_latlon <- "+proj=longlat +datum=WGS84 +no_defs"

### utm utilizado a nivel regional (depende de la zona y hemisferio)
crs_utm <- "+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0"
```


```{r}
LC_ll <- raster::projectRaster(LC, crs = crs_latlon)

```





### Recorte Imagen Satelital


```{r}
## crop y mask
# ext <- drawExtent()
ext <- extent(c(350638, 358235,  6299157, 6304228))
LC_crop <- crop(x = LC, y = ext, snap="out")
# LCondes <- mask(r2, ext)
plotRGB(LC_crop, r = 4, g = 3, b = 2, stretch = "lin")
```




### Combinaciones de Bandas de Imagen Satelital

<center>![](imagenes/l8-band-combinations.png){width=100%}</center>

Número de bandas asignado a la Imagen OLI Landsat

- aerosol = 1
- blue    = 2
- green   = 3
- red     = 4
- nir     = 5
- swir1   = 6
- swir2   = 7
- thermal  = 8


Las Condes: Color Natural (4,3,2)
```{r fig.align="center"}
plotRGB(LC, r = 4, g = 3, b = 2, stretch = "lin")
```


Las Condes: Falso Color (7,6,4)
```{r fig.align="center"}
plotRGB(LC, r = 7, g = 6, b = 4, stretch = "lin")
```


Las Condes: Infrarojo (5,4,3)
```{r fig.align="center"}
plotRGB(LC, r = 5, g = 4, b = 3, stretch = "lin")
```


Las Condes: Agricultura (6,5,2)

```{r fig.align="center"}
plotRGB(LC, r = 6, g = 5, b = 2, stretch = "lin")
```


Las Condes: Penetración de la Radiación en la Atmósfera (7,6,5)
```{r fig.align="center"}
plotRGB(LC, r = 7, g = 6, b = 5, stretch = "lin")
```

Las Condes: Uso del Suelo / Masas de Agua (5,6,4)

```{r fig.align="center"}
plotRGB(LC, r = 5, g = 6, b = 4, stretch = "lin")
```


Las Condes: Infrarojo de Onda Corta (7,5,4)

```{r fig.align="center"}
plotRGB(LC, r = 7, g = 5, b = 4, stretch = "lin")
```


Las Condes: Análisis de Vegetación (6,5,4)

```{r fig.align="center"}
plotRGB(LC, r = 6, g = 5, b = 4, stretch = "lin")
```


Las Condes: Análisis de Vegetación Sana (5,6,2)

```{r fig.align="center"}
plotRGB(LC, r = 5, g = 6, b = 2, stretch = "lin")
```

## NDVI


### Cálculo de NDVI 

<center>![Formula para el cáculo de NDVI](imagenes/NDVI_f.png)</center>

Metódo 1

```{r }
#NDVI(img, red, NIR)
NDVI <- function(img, r, n) {
   br <- img[[r]]
   bn <- img[[n]]
   vi <- (bn - br) / (bn + br)
   return(vi)
}
NDVI_lc <- NDVI(LC, 4, 5)
plot(NDVI_lc , main = "NDVI Las Condes")

```





### Histograma de valores NDVI

```{r fig.align="center"}
# dev.off()
hist(NDVI_lc, col="springgreen4", main="Histograma NDVI Las Condes",
  ylab="Numero de Pixeles", xlab="valor NDVI")

```



### reclasificación de NDVI

*Todo lo que sea igual o menor que value será lo demàs conserva su valor*

```{r}

corte_eq_menor<- function(value) {
  function(x){ifelse(x <= value,NA, x)}
}
vegetacion <- calc(NDVI_lc, fun = corte_eq_menor(value = 0.4))
plot(vegetacion)
```


## Visualización Avanzada de Raster 

### Visualziación Estática 

Zonas de Vegetación ALta en Las Condes

```{r}
# crear una paleta de colores con 200 niveles 
pal_green <- colorRampPalette(c("green","springgreen4", "darkgreen"))( 200 )
plot(vegetacion , main = "NDVI Vegetación Alta", col = pal_green)

## agregar Las polígono de Las Condes
LasCondes <- sf::st_read("data/shape/LasCondes.shp")
plot(LasCondes$geometry, add = T, )
```

### Visualización Dinámica


Versión  con Mapview 
```{r}
# install.packages("mapview")

mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
  viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent")+ 
  mapview(vegetacion, na.color = "transparent") +
  mapview(NDVI_lc, na.color = "transparent") 

  
mview
# Mostrar opciones de guardar resultados dinámicos
```


bonus guardar html
```{r eval=FALSE}
mapshot(x = mview, url = "mapa_veg.html")
```


Versión con librería Leaflet (compleja)
```{r}
suppressPackageStartupMessages(library(leaflet))
NDVI_lc_ll <- projectRaster(vegetacion, 
                            crs = "+proj=longlat +datum=WGS84 +no_defs")

LasCondes <- sf::st_transform(LasCondes, crs_latlon)

# se construye una función para asignar valores dado un valor
pal <- colorNumeric(c("green","springgreen4", "darkgreen"), 
                    values(NDVI_lc_ll), na.color = "transparent")

map <- leaflet() %>% 
  addTiles(group = "OSM (default)") %>%  
  addProviderTiles(providers$Stamen.Toner, group = "Toner") %>%
  addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
  addProviderTiles(providers$Esri.WorldImagery, group = "Satellite")%>%
  addRasterImage(NDVI_lc_ll, colors = pal, opacity = 1, group = "NDVI") %>%
  addLegend(position = "bottomright", pal = pal, values = values(NDVI_lc_ll),
            opacity = 1, group = "NDVI", title = "NDVI")%>%
  addPolygons(data = LasCondes, color =  "navy", 
              fillOpacity = 0, weight = 3)%>%
  addLayersControl(position = "topright",
                   baseGroups = c("Toner Lite","Satellite", 
                                  "OSM (default)", "Toner"),
                   overlayGroups = "NDVI",
                   options = layersControlOptions(collapsed = TRUE))
map
```


## Repasar Instalación de Rgee


Instalar Librerías Previas
```{r eval=FALSE}

install.packages("reticulate")
install.packages("jsonlite")

```


Instalar Rgee

```{r eval=FALSE}
install.packages("remotes")
remotes::install_github("r-spatial/rgee", force = TRUE)
install.packages("rgee")

```

Instalar Ambiente Virtual

```{r eval=FALSE}
## It is necessary just once
ee_install() 

# indicar "Yes"
# Ahora de debe reiniciar Rstudio
```



Test de Instalación Correcta

```{r}
library(tidyverse)
library(rgee)
library(sf)
ee_Initialize()

createTimeBand <-function(img) {
  year <- ee$Date(img$get('system:time_start'))$get('year')$subtract(1991L)
  ee$Image(year)$byte()$addBands(img)
}

collection <- ee$
  ImageCollection('NOAA/DMSP-OLS/NIGHTTIME_LIGHTS')$
  select('stable_lights')$
  map(createTimeBand)

col_reduce <- collection$reduce(ee$Reducer$linearFit())
col_reduce <- col_reduce$addBands(
  col_reduce$select('scale'))
# ee_print(col_reduce)


Map$setCenter(9.08203, 47.39835, 3)
m <- Map$addLayer(
  eeObject = col_reduce,
  visParams = list( bands = c("scale", "offset", "scale"),
                    min = 0,    max = c(0.18, 20, -0.18)),
  name = "stable lights trend")
m

```


<br>

## Referencias

Learning R for Geoespatial Analysis

[https://rspatial.org/raster/spatial/8-rastermanip.html](https://rspatial.org/raster/spatial/8-rastermanip.html)

Referencias de Mapview

[https://r-spatial.github.io/mapview/reference/index.html](https://r-spatial.github.io/mapview/reference/index.html)

Referencias de Leaflet

[https://rstudio.github.io/leaflet/](https://rstudio.github.io/leaflet/)

